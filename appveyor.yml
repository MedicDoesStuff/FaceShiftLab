environment:
  global:
    PYTHON: "C:\\Python36-x64"
  matrix:
    #- ARCH: "OpenCLSSE"
    #- ARCH: "CUDA9.2SSE"
    #- ARCH: "CUDA10.1SSE"
    - ARCH: "CUDA10.1AVX"


version: '{branch}-{build}'

#os: Visual Studio 2017

install:
  - cmd: SET PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%"
  - cmd: For /f "tokens=2-4 delims=/ " %%a in ('date /t') do (set mydate=%%c-%%a-%%b)
  - cmd: set /p ARCHIVE_NAME=DeepFaceLab-%ARCH%-%mydate%-%APPVEYOR_REPO_BRANCH%-%APPVEYOR_BUILD_NUMBER%
  - cmd: echo %ARCHIVE_NAME%
  - ps: python --version
  - ps: python -m pip install --upgrade pip
  - ps: python -m pip install -r appveyor/requirements.txt
  - cmd: cd ..
  - cmd: python deepfacelab\appveyor\gdrive.py %ARCH% > Output
  - cmd: set /p URL=<Output
  - ps: wget "$env:URL" -OutFile prebuilt.zip
  - cmd: 7z x prebuilt.zip -y > nul
  #- cmd: dir
  #- cmd: dir .\deepfacelab
  #- cmd: dir .\DeepFaceLab%ARCH%\_internal\DeepFaceLab
  #- cmd: rmdir /q/ s .\DeepFaceLab%ARCH%\_internal\DeepFaceLab
  #- cmd: xcopy .\deepfacelab .\DeepFaceLab%ARCH%\_internal\DeepFaceLab\ /Y /O /X /E /H /K
  #- cmd: dir .\DeepFaceLab%ARCH%\_internal
  #- cmd: dir .\DeepFaceLab%ARCH%\_internal\DeepFaceLab
  #- cmd: 7z a %ARCHIVE_NAME%.7z -r DeepFaceLab%ARCH%

build: off

#test_script:
#  # Put your test command here.
#  # If you don't need to build C extensions on 64-bit Python 3.3 or 3.4,
#  # you can remove "build.cmd" from the front of the command, as it's
#  # only needed to support those cases.
#  # Note that you must use the environment variable %PYTHON% to refer to
#  # the interpreter you're using - Appveyor does not do anything special
#  # to put the Python version you want to use on PATH.
#  - '%PYTHON%\\python.exe setup.py test'

#after_test:
#  # This step builds your wheels.
#  # Again, you only need build.cmd if you're building C extensions for
#  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
#  # interpreter
#  - '%PYTHON%\python.exe setup.py bdist_wheel'

artifacts:
  - path: DeepFaceLab%ARCH%.zip

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.
